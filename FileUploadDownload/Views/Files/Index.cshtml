@model IEnumerable<FileInfo>

@{
    ViewData["Title"] = "文件";
    string directoryPath = this.ViewData["UploadFilsDirectory"] as string;
}

<div class="container">
    <div class="row">
        <div class="spinner-grow text-warning" role="status">
        </div>
        <h1>文件</h1>
    </div>
    <span class="badge badge-pill badge-primary shadow">@directoryPath</span>
    <hr />

    <div class="container-fluid">
        <div class="card-columns">
            @foreach (var file in this.Model)
            {
                @await Html.PartialAsync("FileInfoPartial", file)
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $('.btn-download-file').on('click', (event) => {
            let fileName = $(event.target).data('file-name');
            self.location.href = `/Files/DownloadFile?fileName=${fileName}`;
        });
        $('.btn-delete-file').on('click', (event) => {
            let fileName = $(event.target).data('file-name');
            $.get({
                url: `/Files/DeleteFile?fileName=${fileName}`,
                cache: false,
            })
                .done((result) => {
                    $(event.target).parents('.card')
                        .fadeOut(500, (e) => {
                            e.remove();
                        });
                })
                .fail((exception) => {
                    alert(exception.responseText);
                });
        });
    </script>
}
